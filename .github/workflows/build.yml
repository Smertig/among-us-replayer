name: Build On Push

on:
  push:
    branches:
      - linux-support

jobs:
  build:
    runs-on: windows-latest
    name: Build
    strategy:
      matrix:
        include:
        - name: Windows x86
          archive_suffix: win-32
          os: windows-latest
          cmake_arch: -A Win32
          is_hq: no

        - name: Windows x86-64
          archive_suffix: win-64
          os: windows-latest
          cmake_arch: -A x64
          is_hq: yes

        - name: Linux x86-64
          archive_suffix: linux-64
          os: ubuntu-latest
          is_hq: yes

    steps:
      - uses: actions/checkout@v2

      - name: Install conan
        run: pip install conan

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          CONAN_SYSREQUIRES_MODE=enabled cmake .. -DCMAKE_BUILD_TYPE=Debug ${{matrix.cmake_arch}}

      - name: Build replayer
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config Debug --target among-us-replayer

      - name: Collect resources
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          cmake -E make_directory _dist
          cmake -E copy bin/among-us-replayer.exe _dist/among-us-replayer.exe
          cmake -E copy bin/among-us-replayer.pdb _dist/among-us-replayer.pdb
          cmake -E copy_directory "${{github.workspace}}/res" _dist/res
          if [ "${{matrix.is_hq}}" == "yes" ]; then cmake -E copy_directory "${{github.workspace}}/res_hq" _dist/res; fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Debug-${{matrix.archive_suffix}}
          path: |
            ${{github.workspace}}/build/_dist
